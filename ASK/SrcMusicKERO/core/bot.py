from pyrogram import Client, errors
from pyrogram.enums import ChatMemberStatus, ParseMode

import config

from logging import LOGGER


class Zelzaly(Client):
    def __init__(self):
        LOGGER("ูููุฒู ุงููููููุณ").info(f"ุฌุงุฑู ุจุฏุก ุชุดุบูู ุงูุจูุช . . .")
        super().__init__(
            name="SrcMusicKERO",
            api_id=config.API_ID,
            api_hash=config.API_HASH,
            bot_token=config.BOT_TOKEN,
            in_memory=True,
            parse_mode=ParseMode.HTML,
            max_concurrent_transmissions=7,
        )

    async def start(self):
        await super().start()

        # ุทุจุงุนุฉ ูุนูููุงุช ุงูุจูุช
        print("โ ุชู ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ!")
        print(f"๐ ูุนุฑู ุงูุจูุช: {self.me.id}")
        print(f"๐ค ุงุณู ุงูุจูุช: {self.me.first_name} {self.me.last_name or ''}")
        print(f"๐ ููุฒุฑ ุงูุจูุช: @{self.me.username}")

        # ุทุจุงุนุฉ ูููุฉ LOGGER_ID
        print(f"๐ ูุนุฑู ูุฌููุนุฉ ุงูุณุฌูุงุช: {config.LOGGER_ID}")

        try:
            await self.send_message(
                chat_id=config.LOGGER_ID,
                text=f"<u><b>ยป ุชู ุชุดุบูู ุงูููููุฒู ูู ุงูุจูุช {self.me.mention} :</b><u>\n\n"
                     f"- ษชแด : <code>{self.me.id}</code>\n"
                     f"- ษดแดแดแด : {self.me.first_name} {self.me.last_name or ''}\n"
                     f"- แดsแดสษดแดแดแด : @{self.me.username}",
            )
            print("โ ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุฅูู ูุฌููุนุฉ ุงูุณุฌูุงุช ุจูุฌุงุญ!")
        except (errors.ChannelInvalid, errors.PeerIdInvalid):
            print("โ ุฎุทุฃ: ุชุฃูุฏ ูู ุฅุถุงูุฉ ุงูุจูุช ููุดุฑู ูู ูุฌููุนุฉ ุงูุณุฌูุงุช.")
            LOGGER(__name__).error("ยป ูู ุจุงุถุงูุฉ ุงูุจููุช ูุดูุฑููุงู ุจูุงูุฉ ุงูุตูุงุญูุงุช ูู ูุฌููุนูุฉ ุงูุณุฌูู")
            exit()
        except Exception as ex:
            print(f"โ ุฎุทุฃ ุบูุฑ ูุชููุน: {type(ex).__name__} - {ex}")
            LOGGER(__name__).error(f"Bot has failed to access the log group/channel.\n  Reason : {type(ex).__name__}.")
            exit()

        try:
            a = await self.get_chat_member(config.LOGGER_ID, self.id)
            if a.status != ChatMemberStatus.ADMINISTRATOR:
                print("โ ุงูุจูุช ููุณ ูุดุฑููุง ูู ูุฌููุนุฉ ุงูุณุฌูุงุช!")
                LOGGER(__name__).error("ยป ูู ุจุฑููุน ุงูุจููุช ูุดูุฑููุงู ุจูุงูุฉ ุงูุตูุงุญูุงุช ูู ูุฌููุนูุฉ ุงูุณุฌูู")
                exit()
            print("โ ุงูุจูุช ูุฏูู ุตูุงุญูุงุช ุงููุดุฑู ูู ูุฌููุนุฉ ุงูุณุฌูุงุช!")
        except Exception as ex:
            print(f"โ ุฎุทุฃ ุนูุฏ ุงูุชุญูู ูู ุตูุงุญูุงุช ุงูุจูุช: {type(ex).__name__} - {ex}")
            exit()

        LOGGER("ูููุฒู ุงูููููุณ").info(f"ุชู ุจุฏุก ุชุดุบูู ุงูุจูุช {self.name} ...โ")

    async def stop(self):
        await super().stop()
